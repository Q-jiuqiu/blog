(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{396:function(e,t,n){"use strict";n.r(t);var r=n(42),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"渲染函数-jsx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渲染函数-jsx"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/render-function.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("渲染函数 & JSX"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"函数式组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数式组件"}},[e._v("#")]),e._v(" 函数式组件")]),e._v(" "),n("p",[e._v("之前创建的锚点标题组件是比较简单，没有管理任何状态，也没有监听任何传递给它的状态，也没有生命周期方法。实际上，它只是一个接受一些 prop 的函数。在这样的场景下，我们可以将组件标记为 "),n("code",[e._v("functional")]),e._v("，这意味它无状态 (没有"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"}},[e._v("响应式数据"),n("OutboundLink")],1),e._v(")，也没有实例 (没有 "),n("code",[e._v("this")]),e._v(" 上下文)。一个"),n("strong",[e._v("函数式组件")]),e._v("就像这样：")]),e._v(" "),n("div",{staticClass:"language-vue extra-class"},[n("pre",{pre:!0,attrs:{class:"language-vue"}},[n("code",[e._v("Vue.component('my-component', {\n  functional: true,\n  // Props 是可选的\n  props: {\n    // ...\n  },\n  // 为了弥补缺少的实例\n  // 提供第二个参数作为上下文\n  render: function (createElement, context) {\n    // ...\n  }\n})\n")])])]),n("p",[e._v("组件需要的一切都是通过 "),n("code",[e._v("context")]),e._v(" 参数传递，它是一个包括如下字段的对象：")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("props")]),e._v("：提供所有 prop 的对象")]),e._v(" "),n("li",[n("code",[e._v("children")]),e._v("：VNode 子节点的数组")]),e._v(" "),n("li",[n("code",[e._v("slots")]),e._v("：一个函数，返回了包含所有插槽的对象")]),e._v(" "),n("li",[n("code",[e._v("scopedSlots")]),e._v("：(2.6.0+) 一个暴露传入的作用域插槽的对象。也以函数形式暴露普通插槽。")]),e._v(" "),n("li",[n("code",[e._v("data")]),e._v("：传递给组件的整个"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/render-function.html#%E6%B7%B1%E5%85%A5%E6%95%B0%E6%8D%AE%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据对象"),n("OutboundLink")],1),e._v("，作为 "),n("code",[e._v("createElement")]),e._v(" 的第二个参数传入组件")]),e._v(" "),n("li",[n("code",[e._v("parent")]),e._v("：对父组件的引用")]),e._v(" "),n("li",[n("code",[e._v("listeners")]),e._v("：(2.3.0+) 一个包含了所有父组件为当前组件注册的事件监听器的对象。这是 "),n("code",[e._v("data.on")]),e._v(" 的一个别名。")]),e._v(" "),n("li",[n("code",[e._v("injections")]),e._v("：(2.3.0+) 如果使用了 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#provide-inject",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("inject")]),n("OutboundLink")],1),e._v(" 选项，则该对象包含了应当被注入的 property。")])])])}),[],!1,null,null,null);t.default=o.exports}}]);